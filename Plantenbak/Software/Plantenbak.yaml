esphome:
  name: plantenbak-lade-1
  friendly_name: Plantenbak lade 1

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "49rmOcyvc0yDHUNNNdQzxsYXByoCtpmNuo8Jv7rhdbk="

ota:
  - platform: esphome
    password: "dfa32334cce519c295cfb1b6132a7f8b"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

   # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Plantenbak Fallback Hotspot"
    password: "na05gv8dfHVP"

captive_portal:

# I2C Configuratie (wordt gedeeld door zowel PN532 als SCD4x)
i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true  # Automatische detectie van I2C-apparaten

web_server:
  version: 3

time:
  - platform: homeassistant
    id: homeassistant_time

output:
  - platform: gpio
    pin: GPIO32 #Fan
    id: Fan
  - platform: gpio
    pin: GPIO23 #Valv
    id: Valv
  - platform: gpio
    pin: GPIO2 # Onboard LED
    id: onboard_led

switch:
  - platform: template #Fan
    name: "Fan"
    id: Fan_switch
    turn_on_action: 
      - output.turn_on: Fan
    turn_off_action: 
      - output.turn_off: Fan
    optimistic: True

  - platform: template #Valv
    name: "Valv"
    id: Valv_switch
    turn_on_action: 
      - output.turn_on: Valv
    turn_off_action: 
      - output.turn_off: Valv
    optimistic: True
    
  - platform: template #LED
    name: "Onboard LED"
    id: onboard_led_switch
    icon: "mdi:led-on"
    turn_on_action: 
      - output.turn_on: onboard_led
    turn_off_action: 
      - output.turn_off: onboard_led
    optimistic: True
  

# PN532 RFID Configuratie
pn532_i2c:
  id: pn532_board
  on_tag:
    then:
      - lambda: |-
          std::vector<unsigned char> tag_uid = tag.get_uid();
          char uid_str[33];
          for (size_t i = 0; i < tag_uid.size(); ++i) {
            snprintf(uid_str + i * 2, 3, "%02X", tag_uid[i]);
          }
          ESP_LOGD("rfid", "UID gescand: %s", uid_str);
          std::map<std::string, std::string> uid_to_plant = {
            {"F3F69102", "Algemeen"},
            {"8363B303", "Koriander"},
            {"8368CC02", "Oregano"},
            {"0E7F030D", "Snijsla"},
            {"A3DCF302", "Basilicum"},
            {"D3FD8D03", "Munt"}
          };
          std::string plant_name = "Onbekend"; 
          if (uid_to_plant.find(uid_str) != uid_to_plant.end()) {
            plant_name = uid_to_plant[uid_str];
          }

          ESP_LOGD("rfid", "Gekoppelde plantnaam: %s", plant_name.c_str());
          id(rfid_uid_sensor).publish_state(plant_name);

# RFID UID als tekstsensor naar Home Assistant sturen
text_sensor:
  - platform: template
    name: "RFID UID"
    id: rfid_uid_sensor

  - platform: version
    name: "ESPHome Versie"
  

sensor:
  - platform: scd4x
    co2:
      name: "CO2 Niveau"
      accuracy_decimals: 0
      unit_of_measurement: "ppm"
    temperature:
      name: "Temperatuur"
      accuracy_decimals: 1
      unit_of_measurement: "Â°C"
    humidity:
      name: "Luchtvochtigheid"
      accuracy_decimals: 1
      unit_of_measurement: "%"
    automatic_self_calibration: true  # Automatische kalibratie inschakelen
    update_interval: 2s


  - platform: adc
    pin: GPIO34
    id: "adcMoisture"
    accuracy_decimals: 3
    unit_of_measurement: '%'
    attenuation: 11db
    filters:
      - calibrate_linear:
        - 1.111  -> 100.0
        - 2.52 -> 0
      - lambda: if (x < 0) return 0; else if (x > 100) return 100; else return (x);
    name: "Soil-Moister"
    update_interval: 2s
    force_update: true

  - platform: adc
    pin: GPIO35
    id: "adcCurrent"
    accuracy_decimals: 3
    unit_of_measurement: 'A'
    attenuation: 12db
    filters:
      - calibrate_linear:
          - 2.49 -> 0.638   # Pas deze waarden aan afhankelijk van de stroommeter
          - 0.0 -> 26.145  # Voorbeeld: 3.3V = 10A (pas aan op basis van je sensor)
      - lambda: if (x < 0) return 0; else return (x);  # Negatieve waarden voorkomen
      - median:
         window_size: 3
         send_every: 2
         send_first_at: 1
      - sliding_window_moving_average:
         window_size: 5
         send_every: 1
    name: "Stroomverbruik"
    update_interval: 1s
    #force_update: true

  - platform: template
    id: vermogen
    accuracy_decimals: 1
    unit_of_measurement: "W"
    lambda: return 12.0 * id(adcCurrent).state;
    name: "Vermogen"
    update_interval: 1s

  
  - platform: total_daily_energy
    name: "Dagelijks Energieverbruik"
    power_id: vermogen
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    icon: mdi:counter

  # BH1750 Light Sensor
  - platform: bh1750
    name: "Light Level"
    update_interval: 1s
    address: 0x23
    unit_of_measurement: "lx"
    accuracy_decimals: 1


binary_sensor:
  - platform: status
    name: "Plantenbak Lade 1 Status"
    id: system_status
    entity_category: "diagnostic"


